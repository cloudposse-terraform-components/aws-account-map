name: "aws-account-map"
# Canonical GitHub repo
github_repo: "cloudposse-terraform-components/aws-account-map"
# Short description of this project
description: |-
  This component is responsible for provisioning information only: it simply populates Terraform state with data (account
  ids, groups, and roles) that other root modules need via outputs.
usage: |-
  ## Pre-requisites

  - [account](https://docs.cloudposse.com/components/library/aws/account) must be provisioned before
    [account-map](https://docs.cloudposse.com/components/library/aws/account-map) component

  ## Usage

  **Stack Level**: Global

  Here is an example snippet for how to use this component. Include this snippet in the stack configuration for the
  management account (typically `root`) in the management tenant/OU (usually something like `mgmt` or `core`) in the
  global region (`gbl`). You can include the content directly, or create a `stacks/catalog/account-map.yaml` file and
  import it from there.

  ```yaml
  components:
    terraform:
      account-map:
        vars:
          enabled: true
          # Set profiles_enabled to false unless we are using AWS config profiles for Terraform access.
          # When profiles_enabled is false, role_arn must be provided instead of profile in each terraform component provider.
          # This is automatically handled by the component's `provider.tf` file in conjunction with
          # the `account-map/modules/iam-roles` module.
          profiles_enabled: false
          root_account_aws_name: "aws-root"
          root_account_account_name: root
          identity_account_account_name: identity
          dns_account_account_name: dns
          audit_account_account_name: audit

          # The following variables contain `format()` strings that take the labels from `null-label`
          # as arguments in the standard order. The default values are shown here, assuming
          # the `null-label.label_order` is
          # ["namespace", "tenant", "environment", "stage", "name", "attributes"]
          # Note that you can rearrange the order of the labels in the template by
          # using [explicit argument indexes](https://pkg.go.dev/fmt#hdr-Explicit_argument_indexes) just like in `go`.

          #  `iam_role_arn_template_template` is the template for the template [sic] used to render Role ARNs.
          #  The template is first used to render a template for the account that takes only the role name.
          #  Then that rendered template is used to create the final Role ARN for the account.
          iam_role_arn_template_template: "arn:%s:iam::%s:role/%s-%s-%s-%s-%%s"
          # `profile_template` is the template used to render AWS Profile names.
          profile_template: "%s-%s-%s-%s-%s"
  ```

  <!-- prettier-ignore-start -->
  <!-- prettier-ignore-end -->
references:
  - name: cloudposse-terraform-components
    description: Cloud Posse's upstream component
    url: https://github.com/orgs/cloudposse-terraform-components/repositories
tags:
  - component/account-map
  - layer/accounts
  - provider/aws
  - privileged
# Categories of this project
categories:
  - component/account-map
  - layer/accounts
  - provider/aws
  - privileged
# License of this project
license: "APACHE2"
# Badges to display
badges:
  - name: Latest Release
    image: https://img.shields.io/github/release/cloudposse-terraform-components/aws-account-map.svg?style=for-the-badge
    url: https://github.com/cloudposse-terraform-components/aws-account-map/releases/latest
  - name: Slack Community
    image: https://slack.cloudposse.com/for-the-badge.svg
    url: https://slack.cloudposse.com
related:
  - name: "Cloud Posse Terraform Modules"
    description: Our collection of reusable Terraform modules used by our reference architectures.
    url: "https://docs.cloudposse.com/modules/"
  - name: "Atmos"
    description: "Atmos is like docker-compose but for your infrastructure"
    url: "https://atmos.tools"
contributors: [] # If included generates contribs
